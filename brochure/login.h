#ifndef LOGIN_H
#define LOGIN_H

#include <QDialog>
#include <QString>
#include "home.h"

namespace Ui {
class Login;
}

class Login : public QDialog
{
    Q_OBJECT

public:

    /** fn
     * Constructor
     *      The basic constructor which is used to create login prompt.
     *
     * pass MainWindow *window, QWidget *parent
     *      MainWindow *window - A pointer back to the main window
     *      QWidget    *parent - A pointer generated by qt
     *
     * Postcondition:
     *      Creates the Qdialogs that prompts the user to login with a valid admin login
     */
    explicit Login(MainWindow *home, QWidget *parent = nullptr);
    ~Login();

private slots:

    /** fn
     * on_ButtonBox_accepted
     *      This the slot that is executed when the user press ok. Since the window may or may close when the user press ok
     *      the processing for this function has been moved to accept, but this cannot be deleted without creating a compile-time
     *      error. Therefore this function has an empty definition.
     */
    void on_buttonBox_accepted();

    /** fn
     * accept
     *      This slot is overwritten from the QWidget class, and it is called when the user press ok.
     *
     * Precondition:
     *      The user should input a username and password before pressing ok
     *
     * Postcondition:
     *      This use will use the username and password the user inputted to call main window's attemptLogin function.
     *      If attempLogin returns true then the QDialog will close, and if attemptLogin returns false a error message is
     *      displayed informing the user that the username and password they inputted were invalid.
     */
    void accept();

private:
    Ui::Login *ui; //!Qt's generated ui pointer to access the widgets inside this window

   MainWindow *home; //!A pointer back to the main window
};

#endif // LOGIN_H
