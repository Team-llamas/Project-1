#ifndef DELETECONFIRMATION_H
#define DELETECONFIRMATION_H

#include <QDialog>
#include <QSqlQuery>
#include <QSqlError>
#include <QString>
#include <QDebug>

namespace Ui {
class deleteConfirmation;
}

class deleteConfirmation : public QDialog
{
    Q_OBJECT

public:

    /** fn
     * Constructor
     *      The basic constructor which is used to confirm the deletion of a customer.
     *
     * pass MainWindow *window, QWidget *parent
     *      QSqlQuery  deletCusomer - An QSqlQuery object already containing the data of the customer that is
     *                                to be deleted
     *
     *      QWidget    *parent      - A pointer generated by qt
     *
     * Postcondition:
     *      Creates the Qdialogs and the entire row from customerList that represents the customer being deleted is
     *      displayed so that the user can confirm if they want to delete this customer
     */
    explicit deleteConfirmation(QSqlQuery deleteCustomer, QWidget *parent = 0);
    ~deleteConfirmation();

private slots:

    /** fn
     * on_acceptButtonBox_accepted
     *      This is the slot that get executed when the user press ok
     *
     * Postcondition:
     *      If the user press ok, then the row displayed is deleted from the customerList table and it's corresponding row
     *      in productOrders is deleted fromt the productOrders table. The QDialog will also close. If the user press cancel,
     *      then the QDialog is closed and no other processing is done.
     */
    void on_acceptButtonBox_accepted();

private:
    Ui::deleteConfirmation *ui; //!<Qt's generated ui pointer to access the widgets inside this window

    QSqlQuery deleteQuerier; //!<A QSqlQuery object to write the delete query to the database if the
                             //!<user press ok.
};

#endif // DELETECONFIRMATION_H
