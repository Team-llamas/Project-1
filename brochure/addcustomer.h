#ifndef ADDCUSTOMER_H
#define ADDCUSTOMER_H

#include <QDialog>
#include "home.h"

namespace Ui {
class addCustomer;
}

class addCustomer : public QDialog
{
    Q_OBJECT

public:

    /** fn
     * Constructor
     *      The basic constructor which is used to create a new customer.
     *
     * pass MainWindow *window, QWidget *parent
     *      MainWindow *window - A pointer back to the main window
     *      QWidget    *parent - A pointer generated by qt
     *
     * Postcondition:
     *      Creates the Qdialogs so that the user can input data to create a new customer with
     */
    explicit addCustomer(MainWindow *window, QWidget *parent = 0);

    /** fn
     * Constructor
     *      The constructor which is used to edit an existing customer.
     *
     * pass MainWindow QString name, QString address, QString email, QString business, bool keyCustomer, interestLevel interest,MainWindow *window, QWidget *parent
     *      QString name - The current name of the customer
     *      QString address - The current address of the customer
     *      QString email - The current email of the customer
     *      QString business - The current business of the customer
     *
     *      bool keyCustomer - A bool value that is true the customer is currently a key customer and false otherwise
     *
     *      interestLevel interest - An enum value stating the current interest level of the customer
     *
     *      MainWindow *window - A pointer back to the main window
     *      QWidget    *parent - A pointer generated by qt
     *
     * Postcondition:
     *      Creates the Qdialogs, fill in the data fields with the existing data, and set editMode to true so that the user can edit the data of an existing customer
     */
    explicit addCustomer(QString name, QString address, QString email, QString business, bool keyCustomer, interestLevel interest,MainWindow *window, QWidget *parent = 0);
    ~addCustomer();

private slots:

    /** fn
     * on_acceptCancelButtonBox_accepted
     *      This the slot that is executed when the user press ok. Since the window may or may close when the user press ok
     *      the processing for this function has been moved to accept, but this cannot be deleted without creating a compile-time
     *      error. Therefore this function has an empty definition.
     */
    void on_acceptCancelButtonBox_accepted();

    /** fn
     * accept
     *      This slot is overwritten from the QWidget class, it is called when the user press ok.
     *
     * Precondition:
     *      The user inputs the data for the customer before pressing ok
     *
     * Postcondition:
     *      If editMode equals false then attempts to create a customer by calling the main window's createCustomer function,
     *      and if editMode is true then attempts to edit a customer by calling the main window's editCustomer function. If
     *      createCustomer/editCustomer returns true then close the QDialog, and if createCustomer/editCustomer returns false
     *      then display an error message informing the user they have inputted an invalid name.
     */
    void accept();

private:
    Ui::addCustomer *ui; //!<Qt's generated ui pointer to access the widgets inside this window

    MainWindow *home; //!<A pointer back to the main window

    bool editMode; //!<A bool value that is true if the user is edit an existing customer and false if the
                   //!<user to creating a new customer

    QString editName; //!<A QString variable to keep track of the name of the customer before their data is editted.
};

#endif // ADDCUSTOMER_H
